version: "3.9"

# Complete MSA Stack with Infrastructure
# Services:
# - PostgreSQL with pgvector extension
# - Redis for caching
# - All 5 microservices: Analysis, Collector, ABSA, Alert, API Gateway

services:
  # Infrastructure Services
  postgres:
    image: pgvector/pgvector:pg16
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-pension_sentiment}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./DOCKER/pgvector/init.sql:/docker-entrypoint-initdb.d/00-init.sql:ro
    networks:
      - msa-network

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - msa-network

  # Core Microservices
  api-gateway:
    build: ./services/api-gateway
    container_name: api-gateway
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/pension_sentiment
      - REDIS_URL=redis://redis:6379
      - ANALYSIS_SERVICE_URL=http://analysis-service:8001
      - COLLECTOR_SERVICE_URL=http://collector-service:8002
      - ABSA_SERVICE_URL=http://absa-service:8003
      - ALERT_SERVICE_URL=http://alert-service:8004
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - analysis-service
      - collector-service
      - absa-service
      - alert-service
    networks:
      - msa-network

  analysis-service:
    build: ./services/analysis-service
    container_name: analysis-service
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/pension_sentiment
      - REDIS_URL=redis://redis:6379
      - API_GATEWAY_URL=http://api-gateway:8000
    ports:
      - "8001:8001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ml-models:/app/models
    networks:
      - msa-network

  collector-service:
    build: ./services/collector-service
    container_name: collector-service
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/pension_sentiment
      - REDIS_URL=redis://redis:6379
      - ANALYSIS_SERVICE_URL=http://analysis-service:8001
    ports:
      - "8002:8002"
    depends_on:
      - postgres
      - redis
    networks:
      - msa-network

  absa-service:
    build: ./services/absa-service
    container_name: absa-service
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/pension_sentiment
      - REDIS_URL=redis://redis:6379
      - ANALYSIS_SERVICE_URL=http://analysis-service:8001
    ports:
      - "8003:8003"
    depends_on:
      - postgres
      - redis
    volumes:
      - absa-models:/app/models
    networks:
      - msa-network

  alert-service:
    build: ./services/alert-service
    container_name: alert-service
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/pension_sentiment
      - REDIS_URL=redis://redis:6379
      - ANALYSIS_SERVICE_URL=http://analysis-service:8001
    ports:
      - "8004:8004"
    depends_on:
      - postgres
      - redis
    networks:
      - msa-network

  # Optional: Web Dashboard (if using the existing frontend)
  dashboard:
    build: ./FRONTEND-DASHBOARD
    container_name: dashboard
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway
    networks:
      - msa-network

networks:
  msa-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  ml-models:
  absa-models: