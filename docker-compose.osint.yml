version: '3.8'

services:
  # PostgreSQL Database for OSINT services
  osint-postgres:
    image: postgres:15
    container_name: osint-postgres
    environment:
      POSTGRES_DB: osint_db
      POSTGRES_USER: osint_user
      POSTGRES_PASSWORD: osint_password
    volumes:
      - osint_postgres_data:/var/lib/postgresql/data
      - ./database/init-osint.sql:/docker-entrypoint-initdb.d/init-osint.sql
    ports:
      - "5433:5432"
    networks:
      - osint-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U osint_user -d osint_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching and task queues
  osint-redis:
    image: redis:7-alpine
    container_name: osint-redis
    ports:
      - "6380:6379"
    volumes:
      - osint_redis_data:/data
    networks:
      - osint-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Kafka for event streaming (simplified single-node setup)
  osint-kafka:
    image: confluentinc/cp-kafka:latest
    container_name: osint-kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: osint-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://osint-kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9093:9092"
    depends_on:
      - osint-zookeeper
    networks:
      - osint-network
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Zookeeper for Kafka
  osint-zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: osint-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2182:2181"
    networks:
      - osint-network

  # OSINT Planning Service
  osint-planning:
    build:
      context: ./BACKEND-OSINT-PLANNING-SERVICE
      dockerfile: Dockerfile
    container_name: osint-planning
    environment:
      DATABASE_URL: postgresql://osint_user:osint_password@osint-postgres:5432/osint_db
      REDIS_URL: redis://osint-redis:6379
      KAFKA_BOOTSTRAP_SERVERS: osint-kafka:9092
      ENVIRONMENT: production
      LOG_LEVEL: INFO
    ports:
      - "8003:8003"
    depends_on:
      - osint-postgres
      - osint-redis
      - osint-kafka
    networks:
      - osint-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # OSINT Source Registry Service
  osint-source:
    build:
      context: ./BACKEND-OSINT-SOURCE-SERVICE
      dockerfile: Dockerfile
    container_name: osint-source
    environment:
      DATABASE_URL: postgresql://osint_user:osint_password@osint-postgres:5432/osint_db
      REDIS_URL: redis://osint-redis:6379
      KAFKA_BOOTSTRAP_SERVERS: osint-kafka:9092
      ENVIRONMENT: production
      LOG_LEVEL: INFO
      ROBOTS_TXT_CACHE_TTL: 86400
      SOURCE_VALIDATION_TIMEOUT: 30
      TRUST_SCORE_THRESHOLD: 0.3
    ports:
      - "8004:8004"
    depends_on:
      - osint-postgres
      - osint-redis
      - osint-kafka
    networks:
      - osint-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # OSINT Task Orchestrator Service
  osint-orchestrator:
    build:
      context: ./BACKEND-OSINT-ORCHESTRATOR-SERVICE
      dockerfile: Dockerfile
    container_name: osint-orchestrator
    environment:
      DATABASE_URL: postgresql://osint_user:osint_password@osint-postgres:5432/osint_db
      REDIS_URL: redis://osint-redis:6379
      KAFKA_BOOTSTRAP_SERVERS: osint-kafka:9092
      ENVIRONMENT: production
      LOG_LEVEL: INFO
      MAX_QUEUE_SIZE: 10000
      TASK_TIMEOUT_DEFAULT: 3600
      MAX_RETRIES_DEFAULT: 3
      WORKER_HEARTBEAT_TIMEOUT: 300
      PLANNING_SERVICE_URL: http://osint-planning:8003
      SOURCE_SERVICE_URL: http://osint-source:8004
    ports:
      - "8005:8005"
    depends_on:
      - osint-postgres
      - osint-redis
      - osint-kafka
      - osint-planning
      - osint-source
    networks:
      - osint-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

networks:
  osint-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  osint_postgres_data:
  osint_redis_data: